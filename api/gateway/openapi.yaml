openapi: 3.0.3

info:
  title: CasaOS Gateway API
  version: v1
  description: |-
    <picture>
        <source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/IceWhaleTech/logo/main/casaos/casaos_banner_dark_night_800px.png">
        <source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/IceWhaleTech/logo/main/casaos/casaos_banner_twilight_blue_800px.png">
        <img alt="CasaOS" src="https://raw.githubusercontent.com/IceWhaleTech/logo/main/casaos/casaos_banner_twilight_blue_800px.png">
    </picture>

servers:
  - url: /v1/gateway

tags:
  - name: USB methods
    description: |-
      USB methods

  - name: Security methods
    description: |-
      Security methods

  - name: Gateway methods
    description: |-
      Gateway methods

security:
  - access_token: []

paths:
  /port:
    put:
      summary: Set gateway port
      description: |-
        Set gateway port
      operationId: setGatewayPort
      tags:
        - Gateway methods
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                port:
                  type: string
                  description: Gateway port
                  example: "80"
      responses:
        "200":
          $ref: "#/components/responses/ResponseOK"
    get:
      summary: Get gateway port
      description: |-
        Get gateway port
      operationId: getGatewayPort
      tags:
        - Gateway methods
      responses:
        "200":
          $ref: "#/components/responses/ResponseStringOK"
        "400":
          $ref: "#/components/responses/ResponseBadRequest"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"

  /security:
    post:
      summary: Upload custom SSL certificate
      operationId: uploadSSLCertificate
      tags:
        - Security methods
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DomainCertificateConfig"
      responses:
        "200":
          $ref: "#/components/responses/ResponseOK"
        "400":
          $ref: "#/components/responses/ResponseBadRequest"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"

    put:
      summary: Enable/disable HTTPS with auto-signed certificate
      operationId: toggleAutoSignedHTTPS
      tags:
        - Security methods
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AutoSignedCertificateConfig"
      responses:
        "200":
          $ref: "#/components/responses/ResponseOK"
        "400":
          $ref: "#/components/responses/ResponseBadRequest"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"

    get:
      summary: Get HTTPS status
      operationId: getHTTPSStatus
      tags:
        - Security methods
      responses:
        "200":
          $ref: "#/components/responses/ResponseHTTPSStatus"
        "400":
          $ref: "#/components/responses/ResponseBadRequest"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"

components:
  securitySchemes:
    access_token:
      type: apiKey
      in: header
      name: Authorization

  responses:
    ResponseOK:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponse"
    ResponseStringOK:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SuccessResponseString"
    ResponseBadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            readOnly: true
            allOf:
              - $ref: "#/components/schemas/BaseResponse"
          example:
            message: "Bad Request"
    ResponseInternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            readOnly: true
            allOf:
              - $ref: "#/components/schemas/BaseResponse"
          example:
            message: "Internal Server Error"
    ResponseHTTPSStatus:
      description: HTTPS status information
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HTTPSStatus"

  schemas:
    BaseResponse:
      properties:
        message:
          readOnly: true
          description: message returned by server side if there is any
          type: string
          example: ""

    SuccessResponseString:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: string
              description: When the interface returns success, this field is the specific success information

    Certificate:
      type: object
      properties:
        primaryDomain:
          type: string
          description: Primary domain name
        otherDomains:
          type: array
          items:
            type: string
          description: Other domain names
        commonName:
          type: string
          description: Common name
        organization:
          type: string
          description: Organization
        effectiveTime:
          type: string
          description: Effective time
        expirationDate:
          type: string
          description: Expire time
        type:
          type: string
          description: Type
          example: "self-signed CA"
        certificate:
          type: string
          description: PEM-encoded certificate
        privateKey:
          type: string
          description: PEM-encoded private key

    AutoSignedCertificateConfig:
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether to enable auto-signed certificates
      required:
        - enabled

    DomainCertificateConfig:
      type: object
      properties:
        domain:
          type: string
          description: Domain name for the certificate
        certificate:
          type: string
          description: PEM-encoded certificate
        privateKey:
          type: string
          description: PEM-encoded private key
      required:
        - domain
        - certificate
        - privateKey

    HTTPSStatus:
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether HTTPS is enabled
        autoHTTPS:
          type: boolean
          description: Whether auto-signed HTTPS is enabled
        certificate:
          $ref: "#/components/schemas/Certificate"
        domain:
          type: string
          nullable: true
          description: Certificate domain name if using custom certificate
      required:
        - enabled
        - autoHTTPS
